#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

branch="$(git rev-parse --abbrev-ref HEAD)"

# Function to check if branch exists
branch_exists() {
    git show-ref --verify --quiet "refs/heads/$1"
    return $?
}

# Define allowed branch types
allowed_types="feature|fix|hotfix|release|chore|docs|test|refactor"

# Check branch naming convention
if [[ ! "$branch" =~ ^($allowed_types)/ ]] && [[ "$branch" != "main" ]] && [[ "$branch" != "development" ]] && [[ "$branch" != "test" ]]; then
    echo "‚ùå Invalid branch name: $branch"
    echo "Branch names must follow the pattern: <type>/<description>"
    echo "Allowed types are:"
    echo "- feature/  (new features)"
    echo "- fix/      (bug fixes)"
    echo "- hotfix/   (urgent fixes for production)"
    echo "- release/  (release preparation)"
    echo "- chore/    (maintenance tasks)"
    echo "- docs/     (documentation updates)"
    echo "- test/     (test additions or modifications)"
    echo "- refactor/ (code refactoring)"
    echo ""
    echo "Example: feature/add-login-page"
    exit 1
fi

# If creating a new feature branch, ensure it's from latest development
if [[ "$branch" =~ ^($allowed_types)/ ]]; then
    if ! branch_exists "$branch"; then
        echo "üîÑ New branch detected. Ensuring it's created from latest development..."
        git fetch origin development
        git reset --hard origin/development
        echo "‚úÖ Branch successfully synchronized with latest development"
    fi
fi

# Protect main branches
if [ "$branch" = "main" ] || [ "$branch" = "test" ] || [ "$branch" = "development" ]; then
    echo "‚ùå You can't commit directly to $branch branch"
    echo "Please follow this workflow:"
    echo "1. Create a branch: git checkout -b <type>/name development"
    echo "   (type can be: feature, fix, hotfix, release, chore, docs, test, refactor)"
    echo "2. Make your changes and commit to your branch"
    echo "3. Push and create a pull request to development"
    echo "4. After approval, development can be merged to test"
    echo "5. After testing, test can be merged to main"
    exit 1
fi

npm run test:run
